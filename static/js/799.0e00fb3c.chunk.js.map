{"version":3,"file":"static/js/799.0e00fb3c.chunk.js","mappings":"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","sources":["components/Sponsors/Sponsors.styled.jsx","components/Sponsors/SponsorsCard.jsx","redux/sponsors/sponsorsSelectors.js","pages/Sponsors.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\n\r\nexport const SponsorCardWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 8px;\r\n  gap: 8px;\r\n  width: 280px;\r\n  height: 239px;\r\n\r\n  border-radius: 20px;\r\n  background-color: var(--card-color);\r\n  box-shadow: var(--shadow-default);\r\n  transition: all 0.4s ease-in;\r\n  &:hover {\r\n    box-shadow: var(--shadow-hover);\r\n  }\r\n\r\n\r\n`;\r\n\r\nexport const SponsorCardTitle = styled.a`\r\ntext-align: center;\r\n  font-weight: 700;\r\n  text-align: center; \r\n  color: var(--blue);\r\n  height: 40px;\r\n`;\r\n\r\nexport const WrapContent = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  \r\n`\r\n\r\nexport const ImgWrap = styled.div`\r\n  display: flex;\r\n  \r\n`\r\n\r\n\r\nexport const SponsorImage = styled.img`\r\n  width: 100px;\r\n  height: 68px;\r\n\r\n`;\r\n\r\nexport const SponsorContent = styled.div`\r\nposition: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n   gap: 12px;\r\n  \r\n`;\r\n\r\n\r\n\r\nexport const TextWrap = styled.div`\r\n\r\nwidth: 125px;\r\nmax-height: 34px;\r\ndisplay: flex;\r\nflex-direction: column;\r\noverflow: hidden;\r\n`\r\nexport const Span = styled.span`\r\n  font-size: 12px;\r\n`\r\n\r\nexport const SponsorText = styled.p`\r\n  font-size: 12px;\r\n`;\r\n\r\n\r\nexport const Date = styled.div`\r\nwidth: 80px;\r\nheight: 80px;\r\nbackground-color: var(--white);\r\n\r\n`","import { Calendar, LinkSpan } from 'pages/pages.styled/Pages.styled';\r\nimport { useState } from 'react';\r\nimport {\r\n    \r\n    ImgWrap,\r\n    Span,\r\n    SponsorCardTitle,\r\n    SponsorCardWrapper,\r\n    SponsorContent,\r\n    SponsorImage,\r\n    SponsorText,\r\n    TextWrap,\r\n    WrapContent,\r\n} from './Sponsors.styled';\r\n\r\nexport const SponsorCard = ({ item }) => {\r\n\r\n    const [selectedDay, setSelectedDay] = useState(null);\r\n    const [showWorkHours, setShowWorkHours] = useState(false)\r\n\r\n    const togglePopup = (index) => {\r\n      setSelectedDay(selectedDay === index ? null : index);\r\n    };\r\n\r\n  \r\n    // const workHours = [\r\n    //     { isOpen: false,  },\r\n    //     { isOpen: false,  },\r\n    //     { isOpen: false,  },\r\n    //     { isOpen: false,  },\r\n    //     { isOpen: false,  },\r\n    //     { isOpen: true, from: '11:00', to: '16:00' },\r\n    //     { isOpen: true, from: '11:00', to: '16:00' },\r\n       \r\n    //   ]\r\nconst days = [ 'MN', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU' ]\r\n    const email = item.email ? item.email : 'notemail@gmail.com';\r\n    const phone = item.phone ? item.phone : 'notphone';\r\n    let fromTime =\r\n        (item?.workDays && item.workDays[0]?.from) ||\r\n        (item?.workDays && item.workDays[5]?.from) ||\r\n        'day and night';\r\n    let toTime =\r\n        (item?.workDays && item.workDays[0]?.to) ||\r\n        (item?.workDays && item.workDays[5]?.to) ||\r\n        '';\r\n    const openDaysCount = item?.workDays\r\n        ? item.workDays.filter(day => day.isOpen).length\r\n        : 0;\r\n    const workSchedule =\r\n        openDaysCount === 7\r\n            ? 'everyday'\r\n            : openDaysCount === 2\r\n            ? 'weekends'\r\n            : openDaysCount === 5\r\n            ? 'weekdays'\r\n            : 'everyday';\r\n    return (\r\n        <SponsorCardWrapper className=\"sponsors-card\">\r\n            <SponsorCardTitle\r\n                className=\"sponsors__title\"\r\n                href={item.url}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n            >\r\n                {item.title}\r\n            </SponsorCardTitle>\r\n            <WrapContent className=\"wrap-content\">\r\n                <ImgWrap className=\"imgWrap\">\r\n                    <SponsorImage\r\n                        src={item.imageUrl}\r\n                        alt=\"Sponsor\"\r\n                        className=\"sponsors__image\"\r\n                    />\r\n                </ImgWrap>\r\n\r\n                <SponsorContent className=\"sponsors-content\">\r\n                    <TextWrap className=\"text-wrap\">\r\n                        <SponsorText className=\"sponsors__workDays\">\r\n                            Time:{' '}\r\n                            {workSchedule}\r\n                        </SponsorText>\r\n                        {/* <Span> few</Span> */}\r\n                        <Span \r\n                        onClick ={() => console.log('data')}>\r\n                            {fromTime} {toTime !== \"\" && \"-\"} {toTime}\r\n                        </Span>\r\n\r\n                        {!showWorkHours && (\r\n                            <>\r\n                             <p>{days[index]}</p>\r\n                                <span>{item.workDays.from || \"---\"}</span>\r\n                                <span>{item.workDays.to || '---'}</span>\r\n                            </>\r\n                        )}\r\n\r\n                        {/* {!showWorkHours && (\r\n                            \r\n                        <Calendar className='Calendar'>\r\n                        {openDaysCount.map((day, index) => (\r\n                          <div key={index}>\r\n                            {day.isOpen && (\r\n                              <>\r\n                                <p>{days[index]}</p>\r\n                                <span>{day.from || \"---\"}</span>\r\n                                <span>{day.to || '---'}</span>\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        ))}\r\n                      </Calendar>\r\n                            )} */}\r\n                    </TextWrap>\r\n                    <TextWrap className=\"text-wrap\">\r\n                        <SponsorText className=\"sponsors__address\">\r\n                            Adress:\r\n                        </SponsorText>\r\n                        <LinkSpan>\r\n                            {item.address \r\n                            ?  <a\r\n                            href={`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(item.address)}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                          >\r\n                            {item.address}  </a>\r\n                            : \"shop online\"}\r\n                            </LinkSpan>\r\n                    </TextWrap>\r\n                    <TextWrap className=\"text-wrap\">\r\n                        <SponsorText className=\"sponsors__email\">\r\n                            Email:\r\n                        </SponsorText>\r\n                        <LinkSpan>\r\n                        <a href={`mailto:${email}`}>{email}</a>\r\n                            </LinkSpan>\r\n                    </TextWrap>\r\n                    <TextWrap className=\"text-wrap\">\r\n                        <SponsorText className=\"sponsors__phone\">\r\n                            Phone:\r\n                        </SponsorText>\r\n                        <LinkSpan>\r\n                        <a href={`tel:${phone}`}>{phone}</a>\r\n                        </LinkSpan>\r\n                    </TextWrap>\r\n                </SponsorContent>\r\n            </WrapContent>\r\n        </SponsorCardWrapper>\r\n    );\r\n};\r\n\r\n\r\n","export const getSponsorsList = state => state.sponsors.listSponsors","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n    SponsorWrap,\r\n    TitleSponsor,\r\n    Wrapper,\r\n} from './pages.styled/Pages.styled';\r\nimport { SponsorCard } from '../components/Sponsors/SponsorsCard';\r\nimport { useAll } from 'hooks/useAll';\r\nimport { langEN, langUA } from 'utils/languages';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport sponsorsOperation from '../redux/sponsors/sponsorsOperations';\r\nimport { getSponsorsList } from 'redux/sponsors/sponsorsSelectors';\r\n\r\nconst SponsorsPage = () => {\r\n    const dispatch = useDispatch();\r\n    const { language } = useAll();\r\n    const [lang, setLang] = useState(langUA);\r\n    const sponsors = useSelector(getSponsorsList);\r\n\r\n    useEffect(() => {\r\n        dispatch(sponsorsOperation.fetchSponsors());\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setLang(language === 'english' ? langEN : langUA);\r\n    }, [language]);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <TitleSponsor>{lang.sponsors}</TitleSponsor>\r\n\r\n            <SponsorWrap className=\"sponsor-page\">\r\n                {sponsors.map((item, index) => (\r\n                    <SponsorCard key={index} item={item} />\r\n                ))}\r\n            </SponsorWrap>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default SponsorsPage\r\n"],"names":["SponsorCardWrapper","styled","div","_templateObject","_taggedTemplateLiteral","SponsorCardTitle","a","_templateObject2","WrapContent","_templateObject3","ImgWrap","_templateObject4","SponsorImage","img","_templateObject5","SponsorContent","_templateObject6","TextWrap","_templateObject7","Span","span","_templateObject8","SponsorText","p","_templateObject9","_templateObject10","SponsorCard","_ref","_item$workDays$","_item$workDays$2","_item$workDays$3","_item$workDays$4","item","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","showWorkHours","email","phone","fromTime","workDays","from","toTime","to","openDaysCount","filter","day","isOpen","length","workSchedule","_jsxs","className","children","_jsx","href","url","target","rel","title","src","imageUrl","alt","onClick","console","log","_Fragment","index","LinkSpan","address","concat","encodeURIComponent","getSponsorsList","state","sponsors","listSponsors","dispatch","useDispatch","language","useAll","langUA","lang","setLang","useSelector","useEffect","sponsorsOperation","fetchSponsors","langEN","Wrapper","TitleSponsor","SponsorWrap","map"],"sourceRoot":""}